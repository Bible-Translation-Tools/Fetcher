name: Docker

on: [push, pull_request]

jobs:
  #test building jar and images for PR without push
  test:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - uses: FranzDiebold/github-env-vars-action@v1.3.0
      - uses: actions/setup-java@v1
        with:
          java-version: '11' # The JDK version to make available on the path.
          java-package: jdk+fx # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      
      - name: Build the web jar
        shell: bash
        run: cd fetcher-web && ./gradlew check build && cd ..

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          JAVA_HOME: ''

      - name: Build web image
        shell: bash
        run: docker build ./fetcher-web
      
      - name: Build pipeline image
        shell: bash
        run: docker build ./fetcher-pipeline

  #build and push web and pipeline images
  push:

    runs-on: ubuntu-20.04
    if: github.event_name == 'push'
    needs: [test]

    steps:
      - uses: actions/checkout@v2
      - uses: FranzDiebold/github-env-vars-action@v1.3.0
      - uses: actions/setup-java@v1
        with:
          java-version: '11' # The JDK version to make available on the path.
          java-package: jdk+fx # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64

      - name: Build the web jar
        shell: bash
        run: cd fetcher-web && ./gradlew check build && cd ..
      
      - name: Build web image
        shell: bash
        run: docker build -t bibletranslationtools/fetcher:$GITHUB_SHA -t bibletranslationtools/fetcher:$GITHUB_REF_NAME -t bibletranslationtools/fetcher:latest ./fetcher-web
      
      - name: Build pipeline image
        shell: bash
        run: docker build -t bibletranslationtools/fetcher-pipeline:$GITHUB_SHA -t bibletranslationtools/fetcher-pipeline:$GITHUB_REF_NAME -t bibletranslationtools/fetcher-pipeline:latest ./fetcher-pipeline

      - name: Log into registry
        shell: bash
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USER }}
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        
      - name: Push image
        run: |
          docker push -a bibletranslationtools/fetcher
          docker push -a bibletranslationtools/fetcher-pipeline
